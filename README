NoUTube
=======

YouTube subscription aggregator and organiser.

Written using PHP with the CodeIgniter framework.

Uses the Zend GData and PHPass libraries.

Requirements
============

 - PHP 5.2.x or higher
 - Apache2 mod_rewrite for URLs without "index.php"

Installation
============

Config
------

You'll need to modify these variables in application/config/config.php to get started:

 - $config['base_url']
 - $config['index_page'] (if using mod_rewrite, which is not necessary)
 - $config['encryption_key'] and $config['sess_secure'] (if using secure sessions, which is not necessary)
 - $config['sess_user_database'] (if storing sessions in a database, which is not necessary)
 - $config['cookie_domain'] and $['cookie_path']

You'll also need to add a few of your own to the end of the file:

 - $config['applicationID']
 - $config['developerKey']

Both of which can be obtained by going to http://code.google.com/apis/youtube/dashboard, and finally:

 - $config['applicationName']

Which is the name to use to brand the site.

Database
--------

Next you'll need to set up a database. Any DBMS supported by CodeIgniter should work.

Create the following tables:

user
 - username, varchar(16), primary
 - hash, char(60)
 - token, text

channel
 - username, varchar(100), primary
 - display, varchar(100)
 - thumbnail, varchar(100)
 - updated, int
 - checked, int, default 0

subscription
 - user, varchar(16), primary
 - channel, varchar(100), primary
 - new, int, default 0
 - later, int, default 0

video
 - video, char(11), primary
 - title, text
 - description, text
 - duration, int
 - published, int
 - channel, varchar(100)

item
 - user, varchar(16), primary
 - video, char(11), primary
 - channel, varchar(100)
 - state, int

Lastly you'll need to add the database connection details to application/config/database.php. Be sure to set database debugging to FALSE.

If you want to store session data in a database too, refer to the CodeIgniter Sessions documentation.

Cron
----

NoUTube requires a background service to regularly poll for new videos.

Simply run crontab -e and add the line:

0 * * * * /path/to/index.php videos poll

There's plenty of documentation on how cron works, so I won't explain it here. Just suffice to say that this will run the service once an hour on the hour.

Notes
-----

If you're going to be pushing commits back to github, you don't want your personalised config files to be included. While you can simply not add them to the commit, I suggest running the following commands to make git ignore changes made:
 git update-index --assume-unchanged application/config/config.php
 git update-index --assume-unchanged application/config/database.php
